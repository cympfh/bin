#!/usr/bin/env ruby
# vim: set ft=ruby:

require 'date'

def usage
  STDERR.puts <<-HELP
NAME
  calendar -- yet another calendar command

SYNOPSIS
  calendar [-A num] [-B num] [-f calendarfile] {--color|--html}

OPTIONS
  --color   output with color sequence
  --html    output in html format
  -s        be enable only when --html (`s` of `standalone`)

For more detail, please see https://github.com/cympfh/calendar
HELP

  exit 0
end

index = nil
$DIR = nil
$A=30 # in default
$B=0
color = false
html = false
standalone = false

# parse args
ARGV.length.times {|i|
  arg = ARGV[i]
  if arg == nil or arg == "-h" or arg == "-?" or arg == "--help"
    usage
  elsif arg == "-A"
    $A = ARGV[i+1].to_i
    i += 1
  elsif arg == "-B"
    $B = ARGV[i+1].to_i
    i += 1
  elsif arg == "-f"
    index = File.basename ARGV[i+1]
    $DIR = File.dirname ARGV[i+1]
    i += 1
  elsif arg == "-c" or arg == "--color"
    color = true
  elsif arg == "-s"
    standalone = true
  elsif arg == "--html"
    html = true
  end
}

if index == nil
  usage
end

# collection of [ Date, SrcFile, Content ]
$DICT = []

# read and trace
def read(file)
  lines = File.read($DIR + '/' + file).chomp.split("\n")
  for line in lines
    line = line.chomp
    # ignore line
    if line == "" or line.index("//") == 0
    # #include
    elsif line.index("#") == 0
      if /<[^>]*>/.match(line) == nil
        STDERR.puts "parse error(0): #{line} in #{file}"
      else
        subfile = /<[^>]*>/.match(line)[0][1...-1]
        read subfile
      end
    # date line
    else
      res = false
      if (res = /^(.*)\t(.*)$/.match line) != nil
        date = Date.parse(res[1])
        content = res[2]
        $DICT << [date, file, content]
      else
        STDERR.puts "parse error(1): #{line} in #{file}"
      end
    end
  end
end

#
# main
#
read(index)

colhash = {}
$DICT.sort!
from = Date.today - 1 - $B
to = Date.today + $A

# html header
if html and standalone
  puts <<EOM
<title>calendar</title>
<style>
  @font-face {font-family:'Josefin Sans';font-style:normal;font-weight:400;src: local('Josefin Sans'),local('JosefinSans'),url(https://fonts.gstatic.com/s/josefinsans/v9/xgzbb53t8j-Mo-vYa23n5ugdm0LZdjqr5-oayXSOefg.woff2) format('woff2');}
  body{font-size:2.0em;font-family:'Josefin Sans'}
  dt{color:#338833;}
</style>
<body>
EOM
end

for d in $DICT do
  date, src, content = d
  if date > from and date <= to
    if (color == false) and (html == false)
      puts "#{date} (#{date.strftime('%a')})   #{content}"
    elsif html
      content = content.gsub(/http[:\.\/a-zA-Z0-9\?\=\-]*/, "<a href='\\&'>\\&</a>")
      if content.include? 'DONE'
        content = "<s>#{content}\e</s>"
      end
      puts "<DT>#{date} (#{date.strftime('%a')})</DT><DD>#{content}</DD>"
    elsif color
      delimiter = ' '
      if colhash[src] == nil
        colhash[src] = (colhash.size) % 7
      end
      delimiter = "\e[4#{colhash[src]+1}m \e[0m"
      if content.include? 'DONE'
        content = "\e[2m#{content}\e[0m"
      end
      puts "\e[32m#{date}\e[0m (\e[33m#{date.strftime('%a')}\e[0m) #{delimiter} #{content.gsub(/http[:\.\/a-zA-Z0-9\?\=\-]*/, "\e[4;34m\\&\e[0m")}"
    end
  end
end

