#!/bin/bash

usage() {
    cat <<EOM
NAME - clone
    A git-clone wrapper

SYNOPSIS
    clone <origin-repository-url>

EOM
    exit
}

[ $# -eq 0 ] && usage

case "$1" in
    -h | --help )
        usage
        ;;
esac

user-list() {
    if [ -f ~/.gitconfig ]; then
        cat ~/.gitconfig | awk '
        /\[.*\]/ {
            if (NAME && EMAIL) {
                print NAME " <" EMAIL ">"
            }
            NAME = ""
            EMAIL = ""
        }
        /name *=/ {
            NAME=$0
        }
        /email *=/ {
            EMAIL=$0
        }' |
        sed 's/ //g; s/name=//; s/email=//; s/</ </'
    fi
}

choose-user() {
    SELECT="$( ( user-list; echo "* custom") | peco )"
    case "$SELECT" in
        "* custom" )
            echo -n "NAME > " >&2; read NAME
            echo -n "EMAIL > " >&2; read EMAIL
            echo "$NAME <$EMAIL>"
            ;;
        * )
            echo "$SELECT"
            ;;
    esac
}

URL="$1"
BASENAME=${URL##*/}
BASENAME=${BASENAME%.git}

echo "Cloning $URL to $PWD/$BASENAME/"
git clone "$URL" "$BASENAME"
chmod 755 "$BASENAME"  # for WSL
cd "$BASENAME"
NAME_EMAIL=$(choose-user)
echo "You are $NAME_EMAIL"
NAME=$(echo "$NAME_EMAIL" | sed 's/ <.*//')
EMAIL=$(echo "$NAME_EMAIL" | sed 's/.* <//; s/>$//')
git config --local user.name "$NAME"
git config --local user.email "$EMAIL"

echo -n "Enter upstream (as \"up\") repository URL (or empty to do nothing) > " >&2
read UP_URL
if [ ! -z "$UP_URL" ]; then
    echo "Add $UP_URL as upstream (up)"
    git remote add up "$UP_URL"
fi
