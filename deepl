#!/usr/bin/env python
import sys

import json
import os
import click
import requests


class DeepL:
    def __init__(self):
        key = os.getenv("DEEPL_AUTH_KEY")
        assert key is not None, "Set ENV DEEPL_AUTH_KEY"
        self.uri = "https://api.deepl.com/v2/translate"
        self.headers = {
            "Authorization": f"DeepL-Auth-Key {key}",
        }

    def run(self, text: str, source_lang: str | None, target_lang: str | None) -> dict:
        data = {
            "text": text,
            "source_lang": source_lang or "JA",
            "target_lang": target_lang or "EN",
        }
        response = requests.post(self.uri, headers=self.headers, data=data)
        return response.json()


@click.command()
@click.option("--source", "-s", type=str, default=None, help="source language")
@click.option("--target", "-t", type=str, default=None, help="target language")
@click.argument("text", type=str, required=False)
def main(
    source: str | None,
    target: str | None,
    text: str,
):
    if not text:
        text = sys.stdin.read()
    data = DeepL().run(text, source_lang=source, target_lang=target)
    try:
        translations = data.get("translations")
        assert translations and translations[0]
        print(json.dumps(translations[0], indent=2))
    except:
        click.echo(f"Err: {data}", err=True)


if __name__ == "__main__":
    main()
