#!/usr/bin/env ruby

require 'date'

if ARGV.size < 2
  STDERR.puts <<-HELP
NAME
    atq -- easy crontab

SYNOPSIS
    atq <time> <command [args]>

    <time> written to be parsed as DateTime in Ruby
    <command [args]> will run at the time
    atq is running until <command> at foregrand

EXAMPLE
    atq 23:36 date
        `date` will be run at 23:36 (located time) today.
    atq 3/29/23:36 date
        This specifies 03-29 23:36 (located time and day) this year.
    atq 2017/3/30/23:36 date
        This specifies also year.

    When time parsing successed, specified time is output in STDERR.
HELP
  exit 0
end
time = DateTime.parse ARGV[0] + "+09:00"
work = ARGV[1..-1].join ' '

if time < DateTime.now
  puts "#{time} is past"
  exit 0
end

def iter(time, work)
  now = DateTime.now

  if now >= time
    STDERR.puts work
    puts `#{work}`
    exit 0
  else
    w = (time - now) * 24 * 60 * 60
    w = w.to_f
    w *= 0.95
    eps = 0.1
    w = eps if w < eps
    sleep w
    iter time, work
  end
end

STDERR.puts "#{time}"
iter time, work
