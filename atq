#!/usr/bin/env ruby

require 'time'

if ARGV.size < 2
  STDERR.puts <<-HELP
NAME
    atq -- easy crontab

SYNOPSIS
    atq <time> <command [args]>

    <time> written to be parsed as Time in Ruby
    <command [args]> will run at the time
    atq is running until <command> at foregrand

EXAMPLE
    atq 23:36 date
        `date` will be run at 23:36 (located time) today.
    atq 3/29/23:36 date
        This specifies 03-29 23:36 (located time and day) this year.
    atq 2017/3/30/23:36 date
        This specifies also year.

    When time parsing successed, specified time is output in STDERR.
HELP
  exit 0
end

if /^\d{10,10}$/ =~ ARGV[0]
    time = ARGV[0].to_i
else
    time = Time.parse(ARGV[0] + "+09:00").to_i
end

work = ARGV[1..-1].join ' '

if time < Time.now.to_i
    puts "#{time} is past"
    exit 0
end

def iter(time, work)
    now = Time.now.to_i

    if now >= time
        puts `#{work}`
        exit 0
    else
        w = [0.01, 0.95 * (time - now)].max
        sleep w
        iter time, work
    end
end

iter time, work
