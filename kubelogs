#!/bin/bash

POD_NAME_EXP=
CONTAINER_NAME=
ALL_CONTAINERS=
TAIL_NUM=100

usage() {
    cat <<EOM
SYNOPSIS
    kubelogs [OPTIONS] <PODNAME_REGEXP>

OPTIONS
    -c <CONTAINER_NAME>    # Logging from the container
                           # (This needs if multiple containers exist in the pod)
    -A, --all-containers   # Logging from all containers
    -n, --tail             # Number of logging lines
    --help                 # Display this

PODNAME_REGEXP
    (Awk-style) Reg-Expression for Pod Name

EOM
}

pod_filter() {
    bash -c "awk '\$1 ~ /$POD_NAME_EXP/'"
}

pods() {
    kubectl get pods | pod_filter | awk '$0=$1'
}

log-date() {
    date "+%Y/%m/%d %H:%M:%S" | tr -d '\r\n'
}

log-info() {
    printf "[$(log-date)] \e[32m$1\e[0m\n" >&2
}

log-error() {
    printf "[$(log-date)] \e[31m$1\e[0m\n" >&2
}

kube-logs() {
    if [ "$ALL_CONTAINERS" ]; then
        kubectl logs "$1" --all-containers=true --tail $TAIL_NUM
    elif [ "$CONTAINER_NAME" ]; then
        kubectl logs "$1" -c "$CONTAINER_NAME" --tail $TAIL_NUM
    else
        kubectl logs "$1" --tail $TAIL_NUM
    fi
}

# argparse
while [ $# -gt 0 ]; do
    case "$1" in
        --help | -h )
            usage
            exit
            ;;
        -c | -C )
            CONTAINER_NAME=$2
            shift 2
            ;;
        -A | --all-contain* )
            ALL_CONTAINERS=1
            shift
            ;;
        -n | --tail )
            TAIL_NUM=$2
            shift 2
            ;;
        * )
            if [ -z "$POD_NAME_EXP" ]; then
                POD_NAME_EXP=$1
                shift
            else
                log-error "Unknown command: $1"
                exit 2
            fi
            ;;
    esac
done

if [ ! "$POD_NAME_EXP" ]; then
    log-error "PODNAME_REGEXP must be passed; See --help"
    exit 1
fi

CHK=0
for pod in $(pods); do
    CHK=1
    log-info "Checking $pod"
    kube-logs $pod
done

if [ $CHK = 0 ]; then
    log-error "No Pod Matched"
fi
