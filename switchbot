#!/usr/bin/env python3

import base64
import json
import hashlib
import hmac
import os
import time
import uuid

import requests
import click


class Switchbot:
    def _auth(self):
        token = os.environ.get("SWITCHBOT_API_TOKEN")
        assert token
        secret = os.environ.get("SWITCHBOT_API_SECRET")
        assert secret
        nonce = uuid.uuid4()
        t = int(round(time.time() * 1000))
        string_to_sign = bytes(f"{token}{t}{nonce}", "utf-8")
        key = bytes(secret, "utf-8")
        sign = base64.b64encode(
            hmac.new(key, msg=string_to_sign, digestmod=hashlib.sha256).digest()
        )
        self.headers = {
            "Authorization": token,
            "Content-Type": "application/json",
            "charset": "utf8",
            "t": str(t),
            "sign": str(sign, "utf-8"),
            "nonce": str(nonce),
            "Content-Type": "application/json; charset: utf8",
        }

    def __init__(self):
        self._auth()

    def get(self, uri: str):
        url = f"https://api.switch-bot.com{uri}"
        return requests.get(url, headers=self.headers).json()

    def post(self, uri: str, data):
        url = f"https://api.switch-bot.com{uri}"
        return requests.post(url, data=data, headers=self.headers).json()


@click.group()
def main():
    pass


@main.command()
def devices():
    res = Switchbot().get("/v1.1/devices")
    print(json.dumps(res["body"]["deviceList"]))


@main.command()
@click.argument("device_id", type=str)
def status(device_id: str):
    res = Switchbot().get(f"/v1.1/devices/{device_id}/status")
    print(json.dumps(res))


@main.command()
@click.argument("device_id", type=str)
def send(device_id: str):
    res = Switchbot().post(f"/v1.1/devices/{device_id}/commands", {})
    print(json.dumps(res))


@main.command()
def scenes():
    res = Switchbot().get("/v1.1/scenes")
    print(json.dumps(res))


@main.command()
@click.argument("scene_id", type=str)
def scene(scene_id: str):
    res = Switchbot().post(f"/v1.1/scenes/{scene_id}/execute", {})
    print(json.dumps(res))


if __name__ == "__main__":
    main()
